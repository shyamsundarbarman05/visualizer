{"ast":null,"code":"import React,{useState,useEffect}from'react';import Navbar from'./components/Navbar';import Controls from'./components/Controls';import Bars from'./components/Bars';import Tiles from'./components/Tiles';import InfoPanel from'./components/InfoPanel';import Footer from'./components/Footer';import{generateRandomArray}from'./utils/generateArray';import{sort,checkHealth}from'./api/sortApi';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[array,setArray]=useState([]);const[algorithm,setAlgorithm]=useState('bubble');const[size,setSize]=useState(20);const[speed,setSpeed]=useState(50);const[isSorting,setIsSorting]=useState(false);const[isPaused,setIsPaused]=useState(false);const[steps,setSteps]=useState([]);const[currentStep,setCurrentStep]=useState(0);const[originalArray,setOriginalArray]=useState([]);const[visualizationType,setVisualizationType]=useState('bars');const[isLoading,setIsLoading]=useState(false);const[status,setStatus]=useState(null);const[connectionStatus,setConnectionStatus]=useState({type:'loading',message:'Checking backend connectivity…'});const statusStyles={loading:'bg-blue-100 text-blue-800 border border-blue-200 dark:bg-blue-900/40 dark:text-blue-200 dark:border-blue-800',success:'bg-green-100 text-green-800 border border-green-200 dark:bg-green-900/40 dark:text-green-200 dark:border-green-800',error:'bg-red-100 text-red-800 border border-red-200 dark:bg-red-900/40 dark:text-red-200 dark:border-red-800',info:'bg-gray-100 text-gray-800 border border-gray-200 dark:bg-gray-800/60 dark:text-gray-200 dark:border-gray-700'};const resetArray=()=>{const newArray=generateRandomArray(size);setArray(newArray);setOriginalArray([...newArray]);setSteps([]);setCurrentStep(0);setIsSorting(false);setIsPaused(false);setStatus(null);};useEffect(()=>{resetArray();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);useEffect(()=>{let isMounted=true;const verifyConnection=async()=>{try{await checkHealth();if(isMounted){setConnectionStatus({type:'success',message:'Backend connected and ready.'});}}catch(error){console.error('Health check failed:',error);if(isMounted){setConnectionStatus({type:'error',message:'Backend unreachable. Start the Flask server on port 5000.'});}}};verifyConnection();const intervalId=setInterval(verifyConnection,30000);return()=>{isMounted=false;clearInterval(intervalId);};},[]);const handleAlgorithmChange=value=>{setAlgorithm(value);setSteps([]);setCurrentStep(0);setStatus(null);};const handleSizeChange=newSize=>{setSize(newSize);const newArray=generateRandomArray(newSize);setArray(newArray);setOriginalArray([...newArray]);setSteps([]);setCurrentStep(0);setStatus(null);};const handleCustomArraySubmit=customArray=>{setArray(customArray);setOriginalArray([...customArray]);setSize(customArray.length);setSteps([]);setCurrentStep(0);setStatus(null);};const visualizeSort=async()=>{if(isSorting||isLoading){return;}setIsPaused(false);setCurrentStep(0);setSteps([]);setStatus({type:'loading',message:'Fetching sort steps from the backend…'});setIsLoading(true);try{const sortSteps=await sort(algorithm,array);if(!Array.isArray(sortSteps)||sortSteps.length===0){throw new Error('No steps returned from backend');}setSteps(sortSteps);setIsSorting(true);setStatus({type:'success',message:\"Received \".concat(sortSteps.length,\" steps for \").concat(algorithm,\" sort.\")});setConnectionStatus({type:'success',message:'Backend connected and ready.'});}catch(error){console.error('Sorting failed:',error);setStatus({type:'error',message:'Unable to fetch sort steps. Ensure the backend server is running.'});setIsSorting(false);setConnectionStatus({type:'error',message:'Backend unreachable. Start the Flask server on port 5000.'});}finally{setIsLoading(false);}};const stopSort=()=>{setIsSorting(false);setIsPaused(false);setCurrentStep(0);setArray([...originalArray]);setSteps([]);setStatus({type:'info',message:'Sort stopped.'});};const togglePause=()=>{setIsPaused(!isPaused);};useEffect(()=>{if(isSorting&&!isPaused&&steps.length>0&&currentStep<steps.length-1){const delayMs=Math.max(20,800-speed*6);const timeoutId=setTimeout(()=>{setCurrentStep(prev=>prev+1);},delayMs);return()=>clearTimeout(timeoutId);}if(isSorting&&steps.length>0&&currentStep===steps.length-1){setIsSorting(false);setStatus({type:'success',message:'Sorting complete!'});}},[currentStep,steps,isSorting,isPaused,speed]);const currentArrayState=steps[currentStep]?steps[currentStep][0]:array;const comparingIndices=steps[currentStep]?steps[currentStep][1]:[];const swappingIndices=steps[currentStep]?steps[currentStep][2]:[];const sortedIndices=steps[currentStep]?steps[currentStep][3]:[];return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-800 dark:text-gray-200\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"main\",{className:\"flex-grow container mx-auto px-4 py-8 space-y-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[connectionStatus&&/*#__PURE__*/_jsx(\"div\",{className:\"p-3 rounded-lg text-sm sm:text-base \".concat(statusStyles[connectionStatus.type]),children:connectionStatus.message}),status&&/*#__PURE__*/_jsx(\"div\",{className:\"p-3 rounded-lg text-sm sm:text-base \".concat(statusStyles[status.type]),children:status.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 bg-white dark:bg-gray-800 rounded-xl shadow-lg\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"algorithm-select\",className:\"text-xl font-bold text-gray-800 dark:text-white mr-4\",children:\"Choose an Algorithm:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"algorithm-select\",onChange:e=>handleAlgorithmChange(e.target.value),value:algorithm,disabled:isSorting||isLoading,className:\"px-4 py-2 border rounded-lg dark:bg-gray-700 dark:border-gray-600 focus:ring-2 focus:ring-blue-500\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"bubble\",children:\"Bubble Sort\"}),/*#__PURE__*/_jsx(\"option\",{value:\"insertion\",children:\"Insertion Sort\"}),/*#__PURE__*/_jsx(\"option\",{value:\"merge\",children:\"Merge Sort\"}),/*#__PURE__*/_jsx(\"option\",{value:\"quick\",children:\"Quick Sort\"}),/*#__PURE__*/_jsx(\"option\",{value:\"heap\",children:\"Heap Sort\"})]})]}),/*#__PURE__*/_jsx(InfoPanel,{algorithm:algorithm}),/*#__PURE__*/_jsx(Controls,{onGenerate:resetArray,onSort:visualizeSort,onStop:stopSort,onTogglePause:togglePause,onSizeChange:handleSizeChange,onSpeedChange:setSpeed,onCustomArraySubmit:handleCustomArraySubmit,onVisualizationChange:setVisualizationType,isSorting:isSorting,isPaused:isPaused,isLoading:isLoading,size:size,speed:speed,visualizationType:visualizationType}),visualizationType==='bars'?/*#__PURE__*/_jsx(Bars,{array:currentArrayState,comparing:comparingIndices,swapping:swappingIndices,sorted:sortedIndices,speed:speed}):/*#__PURE__*/_jsx(Tiles,{array:currentArrayState,comparing:comparingIndices,swapping:swappingIndices,sorted:sortedIndices,speed:speed})]}),/*#__PURE__*/_jsx(Footer,{})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Navbar","Controls","Bars","Tiles","InfoPanel","Footer","generateRandomArray","sort","checkHealth","jsx","_jsx","jsxs","_jsxs","App","array","setArray","algorithm","setAlgorithm","size","setSize","speed","setSpeed","isSorting","setIsSorting","isPaused","setIsPaused","steps","setSteps","currentStep","setCurrentStep","originalArray","setOriginalArray","visualizationType","setVisualizationType","isLoading","setIsLoading","status","setStatus","connectionStatus","setConnectionStatus","type","message","statusStyles","loading","success","error","info","resetArray","newArray","isMounted","verifyConnection","console","intervalId","setInterval","clearInterval","handleAlgorithmChange","value","handleSizeChange","newSize","handleCustomArraySubmit","customArray","length","visualizeSort","sortSteps","Array","isArray","Error","concat","stopSort","togglePause","delayMs","Math","max","timeoutId","setTimeout","prev","clearTimeout","currentArrayState","comparingIndices","swappingIndices","sortedIndices","className","children","htmlFor","id","onChange","e","target","disabled","onGenerate","onSort","onStop","onTogglePause","onSizeChange","onSpeedChange","onCustomArraySubmit","onVisualizationChange","comparing","swapping","sorted"],"sources":["C:/Users/shyam/Desktop/visualizer/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport Controls from './components/Controls';\r\nimport Bars from './components/Bars';\r\nimport Tiles from './components/Tiles';\r\nimport InfoPanel from './components/InfoPanel';\r\nimport Footer from './components/Footer';\r\nimport { generateRandomArray } from './utils/generateArray';\r\nimport { sort, checkHealth } from './api/sortApi';\r\n\r\nfunction App() {\r\n  const [array, setArray] = useState([]);\r\n  const [algorithm, setAlgorithm] = useState('bubble');\r\n  const [size, setSize] = useState(20);\r\n  const [speed, setSpeed] = useState(50);\r\n  const [isSorting, setIsSorting] = useState(false);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [steps, setSteps] = useState([]);\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [originalArray, setOriginalArray] = useState([]);\r\n  const [visualizationType, setVisualizationType] = useState('bars');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [status, setStatus] = useState(null);\r\n  const [connectionStatus, setConnectionStatus] = useState({ type: 'loading', message: 'Checking backend connectivity…' });\r\n\r\n  const statusStyles = {\r\n    loading: 'bg-blue-100 text-blue-800 border border-blue-200 dark:bg-blue-900/40 dark:text-blue-200 dark:border-blue-800',\r\n    success: 'bg-green-100 text-green-800 border border-green-200 dark:bg-green-900/40 dark:text-green-200 dark:border-green-800',\r\n    error: 'bg-red-100 text-red-800 border border-red-200 dark:bg-red-900/40 dark:text-red-200 dark:border-red-800',\r\n    info: 'bg-gray-100 text-gray-800 border border-gray-200 dark:bg-gray-800/60 dark:text-gray-200 dark:border-gray-700',\r\n  };\r\n\r\n  const resetArray = () => {\r\n    const newArray = generateRandomArray(size);\r\n    setArray(newArray);\r\n    setOriginalArray([...newArray]);\r\n    setSteps([]);\r\n    setCurrentStep(0);\r\n    setIsSorting(false);\r\n    setIsPaused(false);\r\n    setStatus(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    resetArray();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    const verifyConnection = async () => {\r\n      try {\r\n        await checkHealth();\r\n        if (isMounted) {\r\n          setConnectionStatus({ type: 'success', message: 'Backend connected and ready.' });\r\n        }\r\n      } catch (error) {\r\n        console.error('Health check failed:', error);\r\n        if (isMounted) {\r\n          setConnectionStatus({ type: 'error', message: 'Backend unreachable. Start the Flask server on port 5000.' });\r\n        }\r\n      }\r\n    };\r\n\r\n    verifyConnection();\r\n    const intervalId = setInterval(verifyConnection, 30000);\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  const handleAlgorithmChange = (value) => {\r\n    setAlgorithm(value);\r\n    setSteps([]);\r\n    setCurrentStep(0);\r\n    setStatus(null);\r\n  };\r\n\r\n  const handleSizeChange = (newSize) => {\r\n    setSize(newSize);\r\n    const newArray = generateRandomArray(newSize);\r\n    setArray(newArray);\r\n    setOriginalArray([...newArray]);\r\n    setSteps([]);\r\n    setCurrentStep(0);\r\n    setStatus(null);\r\n  };\r\n\r\n  const handleCustomArraySubmit = (customArray) => {\r\n    setArray(customArray);\r\n    setOriginalArray([...customArray]);\r\n    setSize(customArray.length);\r\n    setSteps([]);\r\n    setCurrentStep(0);\r\n    setStatus(null);\r\n  };\r\n\r\n  const visualizeSort = async () => {\r\n    if (isSorting || isLoading) {\r\n      return;\r\n    }\r\n\r\n    setIsPaused(false);\r\n    setCurrentStep(0);\r\n    setSteps([]);\r\n    setStatus({ type: 'loading', message: 'Fetching sort steps from the backend…' });\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const sortSteps = await sort(algorithm, array);\r\n\r\n      if (!Array.isArray(sortSteps) || sortSteps.length === 0) {\r\n        throw new Error('No steps returned from backend');\r\n      }\r\n\r\n      setSteps(sortSteps);\r\n      setIsSorting(true);\r\n      setStatus({ type: 'success', message: `Received ${sortSteps.length} steps for ${algorithm} sort.` });\r\n      setConnectionStatus({ type: 'success', message: 'Backend connected and ready.' });\r\n    } catch (error) {\r\n      console.error('Sorting failed:', error);\r\n      setStatus({ type: 'error', message: 'Unable to fetch sort steps. Ensure the backend server is running.' });\r\n      setIsSorting(false);\r\n      setConnectionStatus({ type: 'error', message: 'Backend unreachable. Start the Flask server on port 5000.' });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const stopSort = () => {\r\n    setIsSorting(false);\r\n    setIsPaused(false);\r\n    setCurrentStep(0);\r\n    setArray([...originalArray]);\r\n    setSteps([]);\r\n    setStatus({ type: 'info', message: 'Sort stopped.' });\r\n  };\r\n\r\n  const togglePause = () => {\r\n    setIsPaused(!isPaused);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSorting && !isPaused && steps.length > 0 && currentStep < steps.length - 1) {\r\n      const delayMs = Math.max(20, 800 - speed * 6);\r\n      const timeoutId = setTimeout(() => {\r\n        setCurrentStep((prev) => prev + 1);\r\n      }, delayMs);\r\n\r\n      return () => clearTimeout(timeoutId);\r\n    }\r\n\r\n    if (isSorting && steps.length > 0 && currentStep === steps.length - 1) {\r\n      setIsSorting(false);\r\n      setStatus({ type: 'success', message: 'Sorting complete!' });\r\n    }\r\n  }, [currentStep, steps, isSorting, isPaused, speed]);\r\n\r\n  const currentArrayState = steps[currentStep] ? steps[currentStep][0] : array;\r\n  const comparingIndices = steps[currentStep] ? steps[currentStep][1] : [];\r\n  const swappingIndices = steps[currentStep] ? steps[currentStep][2] : [];\r\n  const sortedIndices = steps[currentStep] ? steps[currentStep][3] : [];\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-800 dark:text-gray-200\">\r\n      <Navbar />\r\n      <main className=\"flex-grow container mx-auto px-4 py-8 space-y-8\">\r\n        <div className=\"space-y-4\">\r\n          {connectionStatus && (\r\n            <div className={`p-3 rounded-lg text-sm sm:text-base ${statusStyles[connectionStatus.type]}`}>\r\n              {connectionStatus.message}\r\n            </div>\r\n          )}\r\n          {status && (\r\n            <div className={`p-3 rounded-lg text-sm sm:text-base ${statusStyles[status.type]}`}>\r\n              {status.message}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"p-6 bg-white dark:bg-gray-800 rounded-xl shadow-lg\">\r\n          <label htmlFor=\"algorithm-select\" className=\"text-xl font-bold text-gray-800 dark:text-white mr-4\">\r\n            Choose an Algorithm:\r\n          </label>\r\n          <select\r\n            id=\"algorithm-select\"\r\n            onChange={(e) => handleAlgorithmChange(e.target.value)}\r\n            value={algorithm}\r\n            disabled={isSorting || isLoading}\r\n            className=\"px-4 py-2 border rounded-lg dark:bg-gray-700 dark:border-gray-600 focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <option value=\"bubble\">Bubble Sort</option>\r\n            <option value=\"insertion\">Insertion Sort</option>\r\n            <option value=\"merge\">Merge Sort</option>\r\n            <option value=\"quick\">Quick Sort</option>\r\n            <option value=\"heap\">Heap Sort</option>\r\n          </select>\r\n        </div>\r\n\r\n        <InfoPanel algorithm={algorithm} />\r\n\r\n        <Controls\r\n          onGenerate={resetArray}\r\n          onSort={visualizeSort}\r\n          onStop={stopSort}\r\n          onTogglePause={togglePause}\r\n          onSizeChange={handleSizeChange}\r\n          onSpeedChange={setSpeed}\r\n          onCustomArraySubmit={handleCustomArraySubmit}\r\n          onVisualizationChange={setVisualizationType}\r\n          isSorting={isSorting}\r\n          isPaused={isPaused}\r\n          isLoading={isLoading}\r\n          size={size}\r\n          speed={speed}\r\n          visualizationType={visualizationType}\r\n        />\r\n\r\n        {visualizationType === 'bars' ? (\r\n          <Bars\r\n            array={currentArrayState}\r\n            comparing={comparingIndices}\r\n            swapping={swappingIndices}\r\n            sorted={sortedIndices}\r\n            speed={speed}\r\n          />\r\n        ) : (\r\n          <Tiles\r\n            array={currentArrayState}\r\n            comparing={comparingIndices}\r\n            swapping={swappingIndices}\r\n            sorted={sortedIndices}\r\n            speed={speed}\r\n          />\r\n        )}\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}